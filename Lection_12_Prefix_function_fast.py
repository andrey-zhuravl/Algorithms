# ==================================================
#
#   Lection 12.
#   Поиск значений префикс-функции для строки.
#
#   asymptotics: O(N)
#
# ==================================================

'''
динамический поиск в каждом последующем срезе исходной строки максимальных длин префиксов, равных суффиксам, 
и присваивание значений этих длин элементам списка (изначально нулевым),
индексы позиций которых соответствуют позициям символов исходной строки,
путем увеличения длины уже найденного префикса (и суффикса) на 1,
если символы, следующие за префиксом и суффиксом предыдущего среза строки равны,
либо путем циклического поиска префикса в уже найденных префиксах префиксов, в случае если
символы, следующие за префиксом и суффиксом предыдущего среза строки НЕ равны, до тех пор, 
пока либо не закончатся префиксы, либо не найдутся равные символы.
'''
def prefixFunction(S):
    '''
    Второстепенная часть. Подготовка списка длин префиксов с длиной списка, равной длине исходной строки
    и нулевыми значениями элементов. '''
    pi = [0] * len(S)

    '''
    Второстепенная часть. Запуск цикла, пробегающего индексы символов исходной строки,
    начиная со второго символа, поскольку у первого, т.е. единичного, символа ни префикса,
    ни суффикса не существует. '''
    for i in range(1, len(S)):

        '''
        Основная часть (часть 1). Установка подсреза, равного длине префикса
        среза с длиной (i-1) исходной строки. '''        
        p = pi[i-1]

        '''
        Основная часть (часть 2). Циклическое переназначение такой границы нового подсреза
        рассматриваемого среза строки, которая соответствует длине префикса, после которого
        следующий символ будет равен последнему символу рассматриваемого среза i, пока не
        найдутся равные символы, либо пока длина рассматриваемых подсрезов не уменьшится до нуля. '''
        while S[i] != S[p] and p > 0: 
            p = pi[p-1]

        '''
        Основная часть (часть 3). Проверка на равенство последнего символа среза i и
        символа, следующего после подсреза, который определен в начале итерации цикла for, и
        увеличение длины этого подсреза на единицу в случае равенства рассматриваемых символов. '''
        if S[i] == S[p]:
            p += 1
        '''
        Второстепенная часть. Присвоение элементу списка префиксов, стоящему в позиции i, значения, 
        равного длине подсреза текущего среза i. '''
        pi[i] = p
    
    return pi 

S1 = "sttstts"
S2 = "sttsttss"
S3 = "ssttsttss"
S4 = "ssttsttsst"

print(prefixFunction(S4))